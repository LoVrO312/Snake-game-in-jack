function Snake.new 1
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 0
pop local 0
push constant 3
pop this 0
push constant 130
pop this 1
push argument 0
pop this 4
push constant 0
pop this 2
push constant 3
pop this 3
push argument 0
call Array.new 1
pop this 5
push argument 0
call Array.new 1
pop this 6
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push this 5
add
push constant 51
push local 0
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 6
add
push constant 24
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
push local 0
push this 5
add
pop pointer 1
push that 0
push local 0
push this 6
add
pop pointer 1
push that 0
call Snake.drawPart 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Snake.move 2
push argument 0
pop pointer 0
push this 3
push this 5
add
pop pointer 1
push that 0
pop local 0
push this 3
push this 6
add
pop pointer 1
push that 0
pop local 1
push this 3
push constant 1
add
pop this 3
push this 3
push this 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 3
label IF_FALSE0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
pop argument 1
label IF_FALSE1
push argument 1
push constant 130
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push constant 132
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push this 5
add
push local 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 6
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END3
label IF_FALSE3
push this 3
push this 5
add
push local 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 6
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
pop this 1
label IF_END3
label IF_FALSE2
push argument 1
push constant 131
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 1
push constant 133
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 3
push this 6
add
push local 1
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 5
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END5
label IF_FALSE5
push this 3
push this 6
add
push local 1
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 5
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
pop this 1
label IF_END5
label IF_FALSE4
push argument 1
push constant 132
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 1
push constant 130
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 3
push this 5
add
push local 0
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 6
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END7
label IF_FALSE7
push this 3
push this 5
add
push local 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 6
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
pop this 1
label IF_END7
label IF_FALSE6
push argument 1
push constant 133
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 1
push constant 131
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 3
push this 6
add
push local 1
push constant 1
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 5
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END9
label IF_FALSE9
push this 3
push this 6
add
push local 1
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 3
push this 5
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
pop this 1
label IF_END9
label IF_FALSE8
push pointer 0
call Snake.checkCollision 1
pop temp 0
push pointer 0
call Snake.tryEat 1
not
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push pointer 0
push this 2
push this 5
add
pop pointer 1
push that 0
push this 2
push this 6
add
pop pointer 1
push that 0
call Snake.deletePart 3
pop temp 0
push this 2
push constant 1
add
pop this 2
label IF_FALSE10
push this 2
push this 4
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
pop this 2
label IF_FALSE11
push pointer 0
push this 3
push this 5
add
pop pointer 1
push that 0
push this 3
push this 6
add
pop pointer 1
push that 0
call Snake.drawPart 3
pop temp 0
push constant 0
return
function Snake.drawPart 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
push constant 5
call Math.multiply 2
push argument 2
push constant 5
call Math.multiply 2
push constant 15
add
push argument 1
push constant 5
call Math.multiply 2
push constant 4
add
push argument 2
push constant 5
call Math.multiply 2
push constant 19
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.deletePart 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push argument 1
push constant 5
call Math.multiply 2
push argument 2
push constant 5
call Math.multiply 2
push constant 15
add
push argument 1
push constant 5
call Math.multiply 2
push constant 4
add
push argument 2
push constant 5
call Math.multiply 2
push constant 19
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.checkCollision 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 0
pop local 1
push this 3
push this 5
add
pop pointer 1
push that 0
push constant 101
gt
push this 3
push this 6
add
pop pointer 1
push that 0
push constant 47
gt
or
push this 3
push this 5
add
pop pointer 1
push that 0
push constant 0
lt
or
push this 3
push this 6
add
pop pointer 1
push that 0
push constant 0
lt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Sys.halt 0
pop temp 0
label IF_FALSE0
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push this 2
push local 0
add
push this 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push this 2
sub
pop local 1
push constant 1
neg
push this 2
call Math.multiply 2
pop local 0
label IF_FALSE1
push this 3
push this 5
add
pop pointer 1
push that 0
push this 2
push local 0
add
push this 5
add
pop pointer 1
push that 0
eq
push this 3
push this 6
add
pop pointer 1
push that 0
push this 2
push local 0
add
push this 6
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
call Sys.halt 0
pop temp 0
label IF_FALSE2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.headX 0
push argument 0
pop pointer 0
push this 3
push this 5
add
pop pointer 1
push that 0
return
function Snake.headY 0
push argument 0
pop pointer 0
push this 3
push this 6
add
pop pointer 1
push that 0
return
function Snake.partX 0
push argument 0
pop pointer 0
push argument 1
push this 5
add
pop pointer 1
push that 0
return
function Snake.partY 0
push argument 0
pop pointer 0
push argument 1
push this 6
add
pop pointer 1
push that 0
return
function Snake.maxBodySize 0
push argument 0
pop pointer 0
push this 4
return
function Snake.tailIndex 0
push argument 0
pop pointer 0
push this 2
return
function Snake.headIndex 0
push argument 0
pop pointer 0
push this 3
return
function Snake.length 0
push argument 0
pop pointer 0
push this 0
return
function Snake.tryEat 0
push argument 0
pop pointer 0
push pointer 0
call Snake.headX 1
call Game.foodXC 0
eq
push pointer 0
call Snake.headY 1
call Game.foodYC 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 1
add
pop this 0
call Game.deleteFood 0
pop temp 0
call Random.changeSeed 0
pop temp 0
push pointer 0
call Game.placeFood 1
pop temp 0
call Game.updateScore 0
pop temp 0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
